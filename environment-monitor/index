package main

import (
	"math/rand"
	"net/http"
	"time"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
)

// 定义返回的数据结构
type Data struct {
	Timestamp       time.Time `json:"timestamp"`
	Temperature     float64   `json:"temperature"`
	Humidity        float64   `json:"humidity"`
	SoilMoisture    float64   `json:"soil_moisture"`
	WaterDischarge  float64   `json:"water_discharge"`
	ElectricCurrent float64   `json:"electric_current"`
	Sunlight        float64   `json:"sunlight"`
}

// 创建一个新的随机数生成器
var rng = rand.New(rand.NewSource(time.Now().UnixNano()))

// 生成随机数据
func generateRandomData() Data {
	return Data{
		Timestamp:       time.Now(),
		Temperature:     rng.Float64() * 30,
		Humidity:        rng.Float64() * 100,
		SoilMoisture:    rng.Float64() * 50,
		WaterDischarge:  rng.Float64() * 20,
		ElectricCurrent: rng.Float64() * 10,
		Sunlight:        rng.Float64() * 1000,
	}
}

// 存储历史数据
var historyData []Data

func main() {
	r := gin.Default()

	// 启用CORS中间件
	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"http://localhost:8081"},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Accept", "Authorization"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	// 生成初始历史数据
	for i := 0; i < 100; i++ {
		historyData = append(historyData, generateRandomData())
	}

	r.GET("/user/data/history", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"historyData": historyData,
		})
	})

	r.GET("/user/data/realtime", func(c *gin.Context) {
		data := generateRandomData()
		// 更新历史数据
		historyData = append([]Data{data}, historyData...)
		c.JSON(http.StatusOK, data)
	})

	r.Run(":3070") // 启动服务，监听3070端口
}
